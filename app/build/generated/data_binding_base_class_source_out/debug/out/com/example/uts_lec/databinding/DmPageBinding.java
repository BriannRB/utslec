// Generated by view binder compiler. Do not edit!
package com.example.uts_lec.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.uts_lec.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DmPageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText messageInput;

  @NonNull
  public final LinearLayout messageInputLayout;

  @NonNull
  public final RecyclerView messageListView;

  @NonNull
  public final Button sendButton;

  private DmPageBinding(@NonNull ConstraintLayout rootView, @NonNull EditText messageInput,
      @NonNull LinearLayout messageInputLayout, @NonNull RecyclerView messageListView,
      @NonNull Button sendButton) {
    this.rootView = rootView;
    this.messageInput = messageInput;
    this.messageInputLayout = messageInputLayout;
    this.messageListView = messageListView;
    this.sendButton = sendButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DmPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DmPageBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.dm_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DmPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.messageInput;
      EditText messageInput = ViewBindings.findChildViewById(rootView, id);
      if (messageInput == null) {
        break missingId;
      }

      id = R.id.messageInputLayout;
      LinearLayout messageInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (messageInputLayout == null) {
        break missingId;
      }

      id = R.id.messageListView;
      RecyclerView messageListView = ViewBindings.findChildViewById(rootView, id);
      if (messageListView == null) {
        break missingId;
      }

      id = R.id.sendButton;
      Button sendButton = ViewBindings.findChildViewById(rootView, id);
      if (sendButton == null) {
        break missingId;
      }

      return new DmPageBinding((ConstraintLayout) rootView, messageInput, messageInputLayout,
          messageListView, sendButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
